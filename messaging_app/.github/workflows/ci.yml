name: CI Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: messaging_app_test
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r messaging_app/requirements.txt
        pip install pytest pytest-django pytest-cov

    - name: Wait for MySQL
      run: |
        until mysqladmin ping -h 127.0.0.1 -P 3306 -u root -proot --silent; do
          echo 'Waiting for MySQL...'
          sleep 2
        done
        echo 'MySQL is ready!'

    - name: Set up environment variables
      run: |
        echo "DATABASE_URL=mysql://test_user:test_password@127.0.0.1:3306/messaging_app_test" >> $GITHUB_ENV
        echo "DJANGO_SETTINGS_MODULE=messaging_app.settings.test" >> $GITHUB_ENV

    - name: Run database migrations
      run: |
        cd messaging_app
        python manage.py migrate --settings=messaging_app.settings.test

    - name: Run tests
      run: |
        cd messaging_app
        python -m pytest --junitxml=../test-results.xml --cov=. --cov-report=xml --cov-report=html

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          test-results.xml
          messaging_app/htmlcov/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./messaging_app/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false